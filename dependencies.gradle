ext {
    versions = [
            kotlin                 : '1.9.22',
            jacksonModuleKotlin    : '2.12.5',
            springBoot             : '3.3.2',
            springCloud            : '4.1.3',
            postgreSQL             : '42.7.3',
            swagger                : '2.6.0',
            jwt                    : '0.11.5',
            mapStruct              : '1.5.5.Final',
            springCloudDependencies: '2023.0.3',
            openFeign              : '13.3',
            googleFirebase         : '9.1.1'
    ]

    libs = [
            commonModule                 : project(':common-module'),
            securityModule               : project(':security-module'),

            kotlinStdLib                 : "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
            kotlinReflect                : "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}",
            jacksonModuleKotlin          : "com.fasterxml.jackson.module:jackson-module-kotlin:${versions.jacksonModuleKotlin}",

            springBootStarterWeb         : "org.springframework.boot:spring-boot-starter-web:${versions.springBoot}",
            springBootValidation         : "org.springframework.boot:spring-boot-starter-validation:${versions.springBoot}",
            springBootStarterSecurity    : "org.springframework.boot:spring-boot-starter-security:${versions.springBoot}",
            springBootBatch              : "org.springframework.boot:spring-boot-starter-batch:${versions.springBoot}",
            springBootDataJpa            : "org.springframework.boot:spring-boot-starter-data-jpa:${versions.springBoot}",
            springBootDataRedis          : "org.springframework.boot:spring-boot-starter-data-redis:${versions.springBoot}",
            springBootDataMongo          : "org.springframework.boot:spring-boot-starter-data-mongodb:${versions.springBoot}",
            springBootDataElasticSearch  : "org.springframework.boot:spring-boot-starter-data-elasticsearch:${versions.springBoot}",

            springCloudDependencies      : "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloudDependencies}",
            springBootStarterEurekaClient: "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${versions.springCloud}",
            springBootStarterEurekaServer: "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${versions.springCloud}",
            springBootStarterGateway     : "org.springframework.cloud:spring-cloud-starter-gateway:${versions.springCloud}",
            springCloudStarterOpenFeign  : "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.springCloud}",
            springCloudConfigClient      : "org.springframework.cloud:spring-cloud-config-client:${versions.springCloud}",

            mapStructer                  : "org.mapstruct:mapstruct:${versions.mapStruct}",
            mapStructProcessor           : "org.mapstruct:mapstruct-processor:${versions.mapStruct}",

            postgreSQL                   : "org.postgresql:postgresql:${versions.postgreSQL}",
            swaggerui                    : "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.swagger}",
            swaggeruiGateway             : "org.springdoc:springdoc-openapi-starter-webflux-ui:${versions.swagger}",
            openFeign                    : "io.github.openfeign:feign-jackson:${versions.openFeign}",
            bootStrap                    : "org.springframework.cloud:spring-cloud-starter-bootstrap:${versions.springCloud}",
            googleFirebase               : "com.google.firebase:firebase-admin:${versions.googleFirebase}",

            jwtTokenApi                  : "io.jsonwebtoken:jjwt-api:${versions.jwt}",
            jwtTokenImpl                 : "io.jsonwebtoken:jjwt-impl:${versions.jwt}",
            jwtTokenJackson              : "io.jsonwebtoken:jjwt-jackson:${versions.jwt}"
    ]
}
