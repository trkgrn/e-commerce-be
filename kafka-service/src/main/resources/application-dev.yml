server:
  port: 9098

spring:
  application:
    name: kafka-service
  kafka:
    bootstrap-servers: ${kafka.brokers}
    schema-registry-url: http://localhost:8081
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: ${spring.kafka.schema-registry-url}
        auto.register.schemas: true
        use.latest.version: true
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      group-id: kafka-service-group
      auto-offset-reset: earliest
      properties:
        schema.registry.url: ${spring.kafka.schema-registry-url}
        specific.avro.reader: true
        use.latest.version: true
  messages:
    basename: message, ValidationMessages
    encoding: UTF-8

kafka:
  host: localhost
  port: 59092
  broker-1: ${kafka.host}:${kafka.port}
  brokers: ${kafka.broker-1}
  topics:
    - name: product.deleted
      partitions: 1
      replicas: 1
    - name: variant.product.deleted
      partitions: 1
      replicas: 1
    - name: media.container.deleted
      partitions: 1
      replicas: 1

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

jwt:
  secret: 8e24abc6be9aa115877dca322f1c2a6f3cc3f97c80efa5ee16c2e3bc497141084b2d85a6aa2ae028cad7c7f5e25aa7a42d06028c1c7313ffaa27617f9a5004b8
  access-token:
    expiry:
      seconds: 3600
  refresh-token:
    expiry:
      seconds: 2592000

springdoc:
  api-docs:
    enabled: true
    path: /v1/kafka/v3/api-docs

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,httptrace
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] %logger{36} - %msg%n"
  level:
    com.trkgrn.kafkaservice: DEBUG
    org.springframework.cloud.sleuth: DEBUG
    feign: DEBUG

logstash:
  destination: localhost:5000
